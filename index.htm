<!DOCTYPE html>
<html>
<head>
    <title>Tree Species Diversity in SF Neighborhoods</title>
    <script src="https://d3js.org/d3.v6.min.js"></script>
    <style>
        /* Basic styling */
        #chart {
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .bar {
            fill: steelblue;
        }
        .bar:hover {
            fill: orange;
        }
        .axis-label {
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div id="chart"></div>
    
    <script>
        // Assuming the data preprocessing has been done to include neighborhood information
        d3.csv("Street_Tree_List-2022-01-30_FILTERED.csv").then(function(data) {
            // Example preprocessing within d3
            let diversityData = calculateDiversity(data);

            drawBarChart(diversityData);
        });

        // Example function to aggregate data by neighborhood and count unique species
        // This function will simulate the preprocessing for demonstration purposes
        function calculateDiversity(data) {
            let diversityMap = new Map();

            data.forEach(tree => {
                if (!diversityMap.has(tree.neighborhood)) {
                    diversityMap.set(tree.neighborhood, new Set());
                }
                diversityMap.get(tree.neighborhood).add(tree.qSpecies);
            });

            let diversityData = Array.from(diversityMap, ([neighborhood, speciesSet]) => ({
                neighborhood: neighborhood,
                speciesDiversity: speciesSet.size
            }));

            return diversityData;
        }

        // Function to draw the bar chart
        function drawBarChart(data) {
            const margin = { top: 20, right: 20, bottom: 30, left: 40 },
                  width = 960 - margin.left - margin.right,
                  height = 500 - margin.top - margin.bottom;

            const x = d3.scaleBand().rangeRound([0, width]).padding(0.1),
                  y = d3.scaleLinear().rangeRound([height, 0]);

            const chart = d3.select("#chart").append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
              .append("g")
                .attr("transform", `translate(${margin.left},${margin.top})`);

            x.domain(data.map(d => d.neighborhood));
            y.domain([0, d3.max(data, d => d.speciesDiversity)]);

            chart.append("g")
                .attr("transform", `translate(0,${height})`)
                .call(d3.axisBottom(x))
                .selectAll(".axis-label")
                .style("text-anchor", "end")
                .attr("dx", "-.8em")
                .attr("dy", ".15em")
                .attr("transform", "rotate(-65)");

            chart.append("g")
                .call(d3.axisLeft(y).ticks(10))
                .append("text")
                .attr("transform", "rotate(-90)")
                .attr("y", 6)
                .attr("dy", "0.71em")
                .attr("text-anchor", "end")
                .text("Species Diversity");

            chart.selectAll(".bar")
                .data(data)
              .enter().append("rect")
                .attr("class", "bar")
                .attr("x", d => x(d.neighborhood))
                .attr("y", d => y(d.speciesDiversity))
                .attr("width", x.bandwidth())
                .attr("height", d => height - y(d.speciesDiversity));
        }
    </script>
</body>
</html>
